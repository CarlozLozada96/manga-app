/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */
@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

:root {
    background-color: rgb(30, 30, 30);
    color: rgb(255, 255, 255);
    font-family: "Roboto", sans-serif;
    font-weight: 400;
    font-style: normal;
    margin: 1rem 2rem 1rem 1rem;
}

#Home {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#Home-manga {
    display: grid;
    grid-template-columns: repeat(3, minmax(auto, 1fr));
    gap: 1rem;
    list-style-type: none;
}

#Home-manga li{
    display: flex;
    flex-direction: column;
    align-items: center;
}

#Home-manga li p {
    padding: 0.1rem 0 0 0;
}

#Home-manga a {
    text-decoration: none;
    color: inherit;
}

#Manga {
    margin: 1rem;
}

#Manga h1 {
    margin: 0;
}

#Manga-header {
    display: flex;
    flex-direction: row;
    column-gap: 0.5rem;
    align-items: center;
}

.Manga-header-text {
    text-align: justify;
    margin: 0.5rem 1.5rem 0.5rem 0.5rem;
}

#Manga-details {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

#Manga-chapters li {
    margin: 0 0 0 1rem;
}

.page-container {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .pagination-controls {
    text-align: center;
    margin-top: 20px;
  }
  
  .btn {
    padding: 10px 20px;
    margin: 0 5px;
    color: #fff;
    background-color: #007bff;
    border: none;
    border-radius: 5px;
    text-decoration: none;
  }
  
  .btn-primary {
    background-color: #007bff;
  }
  
  .btn-secondary {
    background-color: #6c757d;
  }
/*Styling of the Login and Register Button*/
  .auth-links {
    position: absolute;
    top: 25px; /* Vertical positioning */
    right: 250px; /* Horizontal positioning */
    z-index: 1; /* Ensure buttons are above other content */
    display: flex; /* Make buttons display side by side */
    gap: 1rem; /* Space between buttons */
  }
  
  .auth-button {
    padding: 0;
    margin: 0;
    border: none;
    background: none;
    cursor: pointer;
    --primary-color: #fff; /* Use white as the primary color */
    --hovered-color: #5e5e5e54; 
    position: relative;
    display: flex;
    font-weight: 600;
    font-size: 20px;
    gap: 0.5rem;
    align-items: center;
    text-decoration: none; /* Remove underline for links */
  }
  
  .auth-button p {
    margin: 0;
    position: relative;
    font-size: 20px;
    color: var(--primary-color);
  }
  
  .auth-button::after {
    position: absolute;
    content: "";
    width: 0;
    left: 0;
    bottom: -7px;
    background: var(--hovered-color);
    height: 2px;
    transition: 0.3s ease-out;
  }
  
  .auth-button p::before {
    position: absolute;
    content: "";
    width: 0%;
    inset: 0;
    color: var(--hovered-color);
    overflow: hidden;
    transition: 0.3s ease-out;
  }
  
  .auth-button:hover::after {
    width: 100%;
  }
  
  .auth-button:hover p::before {
    width: 100%;
  }
  
  .auth-button:hover svg {
    transform: translateX(4px);
    color: var(--hovered-color);
  }
  
  .auth-button svg {
    color: var(--primary-color);
    transition: 0.2s;
    position: relative;
    width: 15px;
    transition-delay: 0.2s;
  } 